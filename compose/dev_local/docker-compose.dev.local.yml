# apis expose 697* ports
services:

  frontend:
    env_file: [ ../.envs/.env.dev.local ]
    build:
      context: ../..
      dockerfile: ./services/frontend/Dockerfile
      args:
        FRONTEND_ENV: dev
    ports:
      - "6971:5173"
    volumes:
      - ../../services/frontend:/src
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  postgres:
    image: postgres:15.1
    env_file: [ ../.envs/.env.dev.local ]
    restart: always
#    volumes:
#      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "6970:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-api:
    restart: on-failure
    env_file: [ ../.envs/.env.dev.local ]
    build:
      context: ../..
      dockerfile: ./services/auth_api/Dockerfile
      args:
        PORT: 6999
    ports:
      - "6979:6999"
    environment:
      ENV_TYPE: stage
    volumes:
      - ../../services/auth_api:/src/services/auth_api
      - ../../database:/src/database
      - ../../apiconfig:/src/apiconfig
      - ../../services/shared:/src/services/shared
#    depends_on:
#      - postgres
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 512M

  distributions-api:
    env_file: [ ../.envs/.env.dev.local ]
    restart: on-failure
    build:
      context: ../..
      dockerfile: ./services/distributions_api/Dockerfile
      args:
        DREAM_ROOT_PATH: /dream
        DREAM_BRANCH: dev
        PORT: 6998
#    depends_on:
#      - auth-api
#      - postgres
#    depends_on:
#      - auth-api
    ports:
      - "6978:6998"
    volumes:
      - ../../services/distributions_api:/src/services/distributions_api
      - ../../apiconfig:/src/apiconfig
      - ../../services/shared:/src/services/shared
      - ~/.aws:/root/.aws
      - /var/run/docker.sock:/var/run/docker.sock
      - ../../database:/src/database
      - ../../git_storage:/src/git_storage
      - ../../deployment_queue:/src/deployment_queue
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 512M

  redis:
    image: redis
    ports:
      - "6972:6379"
    restart: always

  deployment-worker:
    env_file: [ ../.envs/.env.dev.local ]
    restart: on-failure
    user: deepypavlova:1600400037
    build:
      context: ../..
      dockerfile: ./services/deployment_worker/Dockerfile
#    command: celery -A services.distributions_api.tasks.tasks:app worker --loglevel=info --uid=1
    volumes:
      - ../../apiconfig:/src/apiconfig
      - ../../database:/src/database
      - ../../git_storage:/src/git_storage
      - ../../deployment_queue:/src/deployment_queue
      - ../../services/deployment_worker:/src/services/deployment_worker
      - ~/.aws:/.aws
      - /var/run/docker.sock:/var/run/docker.sock
#    depends_on:
#      - redis

#
#  flower:
#    env_file: [ ../.envs/.env.dev.local ]
#    restart: on-failure
#    build:
#      context: ../..
#      dockerfile: ./services/distributions_api/Dockerfile
#    volumes:
#      - ../../services/distributions_api:/src/services/distributions_api
#      - ../../database:/src/database
#      - ../../apiconfig:/src/apiconfig
#    command: celery -A services.distributions_api.tasks.tasks flower --port=5555 # --basic_auth=name:pass
#    ports:
#      - 5555:5555
#    depends_on:
#      - redis
#      - celery_worker

version: '3.7'
