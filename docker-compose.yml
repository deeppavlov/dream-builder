services:

  frontend:
    env_file: [ .env ]
    build:
      context: ./
      dockerfile: ./services/frontend/Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./services/frontend:/src
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  postgres:
    image: postgres:15.1
    env_file: [ .env ]
    restart: always
#    volumes:
#      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5000:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-api:
    env_file: [ .env ]
    build:
      context: ./
      dockerfile: ./services/auth_api/Dockerfile
      args:
        PORT: 6999
    ports:
      - "6999:6999"
    volumes:
      - ./services/auth_api:/src/services/auth_api
      - ./database:/src/database
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  distributions-api:
    env_file: [ .env ]
    build:
      context: ./
      dockerfile: ./services/distributions_api/Dockerfile
      args:
        DREAM_ROOT_PATH: /dream
        PORT: 6998
    depends_on:
      - auth-api
    ports:
      - "6998:6998"
    volumes:
      - ./services/distributions_api:/src/services/distributions_api
      - ./database:/src/database
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

version: '3.7'
